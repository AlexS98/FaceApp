// <auto-generated />
using System;
using FaceDetector.Domain.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FaceDetector.Domain.Migrations
{
    [DbContext(typeof(FaceAppDbContext))]
    [Migration("20191216003631_BaseStructure")]
    partial class BaseStructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FaceDetector.Abstractions.Entities.BaseUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedId");

                    b.HasIndex("UpdatedId");

                    b.ToTable("BaseUser");

                    b.HasDiscriminator<string>("Discriminator").HasValue("BaseUser");
                });

            modelBuilder.Entity("FaceDetector.Domain.Models.Entities.FaceAppImage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnalyzeResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileExtension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageBase64")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ImageBase64Length")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PictureHeight")
                        .HasColumnType("int");

                    b.Property<int?>("PictureWidth")
                        .HasColumnType("int");

                    b.Property<Guid?>("UpdatedId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedId");

                    b.HasIndex("UpdatedId");

                    b.ToTable("Faces");
                });

            modelBuilder.Entity("FaceDetector.Domain.Models.Entities.User", b =>
                {
                    b.HasBaseType("FaceDetector.Abstractions.Entities.BaseUser");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("FaceDetector.Abstractions.Entities.BaseUser", b =>
                {
                    b.HasOne("FaceDetector.Abstractions.Entities.BaseUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedId");

                    b.HasOne("FaceDetector.Abstractions.Entities.BaseUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedId");
                });

            modelBuilder.Entity("FaceDetector.Domain.Models.Entities.FaceAppImage", b =>
                {
                    b.HasOne("FaceDetector.Abstractions.Entities.BaseUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedId");

                    b.HasOne("FaceDetector.Abstractions.Entities.BaseUser", "LastUpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedId");
                });
#pragma warning restore 612, 618
        }
    }
}
